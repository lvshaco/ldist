#!/bin/bash
usage() {
    cat <<EOF
Usage: $0 [options]
    qzonline        query qzserver online count
    -h | --help     print this message
EOF
}

qzonline() {
    cd pl_qzserver && 
    ansible -i hosts $1 -m shell -a "cd server/bin && echo :game count | ./shaco config_cmdcli"
}

CMD=$1
shift
case $CMD in
           "") ;;
     qzonline) qzonline ${1:-all}; exit;;
    -h|--help) usage; exit 1;;
            *) usage; exit 1;;
esac

TITLE="Distribute by lvshaco"
PL=(
"1" "qzserver" "qzserver"   "hosts"        "-K"   "qzserver"
"2" "web"      "web"        "hosts"        "-K"   "web"
"3" "qaweb1"   "qaweb1"     "hosts"        "-K"   "qaweb1"
"4" "vps"      "vps"        "hosts"        "-K"   "vps"
"5" "user_byroot"     "user"       "i_byroot.py"  "-k"   "add user by root"
"6" "user"     "user"       "i.py"         "-K"   "add user"
"7" "qzmonitor" "qzserver"  "hosts"        "-K"   "qzmonitor"
"8" "qztest_res" "qzserver" "hosts"        "-K"   "qztest_res"
"9" "qzbilling" "qzserver"  "hosts"        "-K"   "qzbilling"
)
TAG_qzserver=(
"1" "dev"         "dev"
"2" "init"        "init"
"3" "upgrade"     "upgrade"
"4" "hotfix"      "hotfix"
"5" "reloadres"   "reloadres"
"6" "gateopen"    "gateopen"
"7" "gatelimit"   "gatelimit"
"8" "dumpdb"      "dumpdb"
"9" "importdb"    "importdb"
"10" "reinit"      "reinit"
)
mychoice() {
    sub_title=$1
    cmd=(dialog --title "$TITLE" --menu "${sub_title}" 22 76 16)
    choices=$("${cmd[@]}" "${@:2}" 2>&1 >/dev/tty)
    echo "${choices[0]}"
} 
gen_choice() {
    step=$1
    shift
    cur_choice=()
    i=0
    while [ $# -gt 0 ]; do
        cur_choice[$((i*2))]="$1"
        cur_choice[$((i*2+1))]="${!step}"
        i=$((i+1))
        shift $step
    done
}
get_pl() {
    index=$1
    index=$((index-1))
    index=$((index*6+$2))
    echo "${PL[$index]}"
}
get_pl_dir() { 
    get_pl $1 2
}
get_pl_yml() { 
    get_pl $1 1
}
get_hostfile() { 
    get_pl $1 3
}
get_opts() { 
    get_pl $1 4
}
get_tag() {
    index=$1
    index=$((index-1))
    index=$((index*3+1))
    echo "${TAG_qzserver[$index]}"
}

gen_choice 6 "${PL[@]}"
ichoice=$(mychoice "select function:" "${cur_choice[@]}")
[[ $ichoice == "" ]] && exit 1

pl_yml=$(get_pl_yml $ichoice)
pl_dir=$(get_pl_dir $ichoice)
hostfile=$(get_hostfile $ichoice)
opts=$(get_opts $ichoice)

if [[ $ichoice == "1" ]]; then
    gen_choice 3 "${TAG_qzserver[@]}"
    ichoice=$(mychoice "select qzserver function:" "${cur_choice[@]}")
    [[ $ichoice == "" ]] && exit 1
    tag=$(get_tag $ichoice)
fi

[[ "${tag}" != "" ]] && tag=" -t ${tag}" 

R="ansible-playbook -i "${hostfile}" "${pl_yml}.yml" "${opts}""${tag}" -l "

other=$(dialog --title "$TITLE"  --inputbox "$R" 12 70  2>&1 >/dev/tty)
other=${other[0]}
#read -p "$R" other
cd pl_"$pl_dir" && mkdir -pv .log && ANSIBLE_CONFIG=../ansible.cfg ANSIBLE_VAULT_PASSWORD_FILE=../.passfile $R $other

exit
