---
- name: Qz logrotate in gameserver
  hosts: gameserver
  become: true
  become_method: su
  vars:
    server_pidfile: "{{server_home}}/bin/shaco.game.pid"
    state_pidfile: "{{server_home}}/bin/shaco.state.pid"
  roles:
    - role: logrotate
      logrotate_scripts:
      - name: "{{server_name}}"
        path: "{{server_logdir}}/shaco.log"
        options:
          - daily
          - dateext
          - rotate 10
          - missingok
          - notifempty
        scripts:
            postrotate: "[ -s {{server_pidfile}} ] && kill -USR1 `cat {{server_pidfile}}`"
    - role: logrotate
      logrotate_scripts:
        - name: "{{state_name}}"
          path: "{{server_logdir}}/shaco.log.state"
          options:
            - daily
            - dateext
            - rotate 10
            - missingok
            - notifempty
              #- compress
              #- delaycompress
          scripts:
              postrotate: "[ -s {{state_pidfile}} ] && kill -USR1 `cat {{state_pidfile}}`"
  tasks:
      - cron: name="sync time" minute="0-59/10" job="/usr/sbin/ntpdate us.pool.ntp.org | logger -t NTP"
        notify: restart crond
      - cron: name="backup {{gamedb}} " minute="0" hour="4" job='mkdir -pv /data && mysqldump -uroot -p"{{mysql_root_passwd}}" -lF -B {{gamedb}} > /data/{{gamedb}}.sql.`date +\%Y\%m\%d-\%H\%M\%S` 2>/dev/null'
        notify: restart crond
      - cron: name="cron daily" minute="0" hour="4" job="root run-parts /etc/cron.daily"
        notify: restart crond
  handlers:
    - name: restart crond
      service: name=crond state=restarted

- name: Qz logrotate in billingserver
  hosts: billingeserver
  become: true
  become_method: su
  vars:
    billing_pidfile: "{{server_home}}/bin/shaco.billing.pid"
  roles:
    - role: logrotate
      logrotate_scripts:
        - name: "{{billing_name}}"
          path: "{{server_logdir}}/shaco.log.billing"
          options:
            - daily
            - dateext
            - rotate 10
            - missingok
            - notifempty
              #- compress
              #- delaycompress
          scripts:
              postrotate: "[ -s {{billing_pidfile}} ] && kill -USR1 `cat {{billing_pidfile}}`"

- name: Qz monitor server
  hosts: monitorserver
  become: true
  become_method: su
  roles:
    - role: graylog_server

- name: Qz monitor agent
  hosts: monitoragent
  become: true
  become_method: su
  pre_tasks:
    - name: Change hostname
      hostname: name={{inventory_hostname}}
  roles:
    - role: graylog_agent
