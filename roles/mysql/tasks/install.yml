---
- name: Add the OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Download mysql rpm
  get_url: url={{mysql_rpm_url}} dest=/usr/local/src/{{mysql_rpm}} timeout=60
  when: ansible_os_family == 'RedHat' and mysql_rpm_url is defined

- name: Install the mysql-server by rpm in Redhat derivatives
  yum: name=/usr/local/src/{{ mysql_rpm }} state=present
  when: ansible_os_family == 'RedHat' and mysql_rpm is defined
    
- name: Install the mysql packages in Redhat derivatives
  yum: name={{ item }} state=installed
  with_items: "{{ mysql_pkgs }}"
  when: ansible_os_family == 'RedHat'

- name: Install the mysql packages in Debian derivatives
  apt: name={{ item }} state=installed update_cache=yes
  with_items: "{{ mysql_pkgs }}"
  environment: env
  when: ansible_os_family == 'Debian'

- name: Copy the my.cnf file 
  template: src=my.cnf.{{ ansible_os_family }}.j2 dest={{ mysql_conf_dir }}/my.cnf
  notify: 
   - restart mysql

- name: flush handlers to apply config changes
  meta: flush_handlers

- name: Ensure mysql is running
  service: name={{ mysql_service }} state=started 

  #- name: Set the mysql services to start on boot
  #service: name={{ mysql_service }} enabled=yes

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_db_pass }}
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost
  when: ansible_hostname != 'localhost' 

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_db_pass }}
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  when: ansible_hostname == 'localhost' 

- name: copy .my.cnf file with root password credentials
  template: src=.my.cnf.j2 dest=~/.my.cnf mode=0600

- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
   - localhost
   - "{{ ansible_hostname }}"

- name: remove the test database
  mysql_db: name=test state=absent
